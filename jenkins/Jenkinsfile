properties([disableConcurrentBuilds()])

pipeline {
    agent {
        kubernetes {
            //inheritFrom 'jenkins-docker-slave'
            label 'my-docker-build'
            defaultContainer 'jnlp'
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                app: my-docker-build
            spec:
              containers:
              - name: docker
                image: docker:latest
                command: ["cat"]
                tty: true
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
              - name: my-repo
                gitRepo:
                  repository: https://github.com/my/repo.git
                  """
             
        }
    }
    //tools {docker 'jenkins-docker'}
    
    

    stages {
        // Чтоб 2 раза не проверял git
         stage('Checkout') {
             steps {
                 git 'https://github.com/STaLeRGooD/web-testing.git'
             }
         }

// "Это работает, но возможно бесполезно"
        // stage('Build') {
        //     tools {nodejs "jenkins-nodejs"}
        //     steps {
        //         sh 'npm install'
        //         sh 'npm run build'
        //     }
        // }

        
        stage('Docker build') {
            agent {docker 'openjdk:8'}
            steps {
                echo " ====================================== start building image ======================================"
                dir('docker'){
                    sh 'docker build .'
                }
            }
        }
        stage('Docker push') {
            agent {docker 'openjdk:8'}
            steps {
               echo " ====================================== pushing image to hub======================================" 
               sh 'docker push stalergood/web-test:testing'
            }


        }

        // stage('Docker build') {
        //     steps {
        //         script {
        //             dockerImage = docker.build("web-testing:${env.BUILD_NUMBER}")
        //         }
        //     }
        // }

        // stage('Docker login') {
        //     steps {
        //         script {
        //             withDockerRegistry([credentialsId: 'docker_hub_credentials', url: 'https://registry.hub.docker.com']) {
        //                 docker.withRegistry('https://registry.hub.docker.com', 'docker_hub_credentials') {
        //                     dockerImage.push()
        //                 }
        //             }
        //         }
        //     }
        // }
    }
}