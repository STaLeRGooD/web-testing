properties([disableConcurrentBuilds()])

pipeline {
    agent {
        kubernetes {
            //inheritFrom 'jenkins-docker-slave'ы             
        }
    }
    //tools {docker 'jenkins-docker'}
    
    

    stages {
        // Чтоб 2 раза не проверял git
         stage('Checkout') {
             steps {
                 git 'https://github.com/STaLeRGooD/web-testing.git'
             }
         }

// "Это работает, но возможно бесполезно"
        // stage('Build') {
        //     tools {nodejs "jenkins-nodejs"}
        //     steps {
        //         sh 'npm install'
        //         sh 'npm run build'
        //     }
        // }

        
        // stage('Docker build') {
        //     steps {
        //         echo " ====================================== start building image ======================================"
        //         dir('docker'){
        //             sh 'docker build .'
        //         }
        //     }
        // }
        // stage('Docker push') {
        //     steps {
        //        echo " ====================================== pushing image to hub======================================" 
        //        sh 'docker push stalergood/web-test:testing'
        //     }


        // }
        stage('Build') {
            steps {
                script {
                    podTemplate(label: 'docker-build', yaml: '''
                        apiVersion: v1
                        kind: Pod
                        metadata:
                        name: docker-build
                        spec:
                        containers:
                          - name: docker-build
                            image: docker:latest
                            command: ['cat']
                            tty: true
                            volumeMounts:
                              - name: docker-socket
                                mountPath: /var/run/docker.sock
                        volumes:
                          - name: docker-socket
                            hostPath:
                                path: /var/run/docker.sock''') {
                    node(docker-build) {
                        sh 'docker build -t my-image .'
                    }
                }
            }
        }
        }
        // stage('Docker build') {
        //     steps {
        //         script {
        //             dockerImage = docker.build("web-testing:${env.BUILD_NUMBER}")
        //         }
        //     }
        // }

        // stage('Docker login') {
        //     steps {
        //         script {
        //             withDockerRegistry([credentialsId: 'docker_hub_credentials', url: 'https://registry.hub.docker.com']) {
        //                 docker.withRegistry('https://registry.hub.docker.com', 'docker_hub_credentials') {
        //                     dockerImage.push()
        //                 }
        //             }
        //         }
        //     }
        // }
    }
}